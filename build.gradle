plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id "org.flywaydb.flyway" version "6.3.3"
}

group 'com.startup'
version '1.0-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-parent', version: '2.0.0.RELEASE', ext: 'pom'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-freemarker', version: '1.1.7.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    //databse support;
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile group: 'org.postgresql', name: 'postgresql', version: '9.4-1201-jdbc41'
    implementation 'org.flywaydb:flyway-core'
    runtimeOnly 'com.h2database:h2'
    // Add jaxb since it's no longer available in Java 11
    runtime 'javax.xml.bind:jaxb-api:2.3.1'
    //security support;
    implementation 'org.springframework.boot:spring-boot-starter-security'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-mail', version: '1.2.0.RELEASE'
}

test {
    useJUnitPlatform()
}

flyway {
    url = 'jdbc:h2:mem:'
    locations = [
            // Add this if you have Java-based migrations
            'classpath:db/migration'
    ]
}